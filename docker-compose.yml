version: '2.23'
services:
  shop.app.catalog.db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: admin
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - "./shop.app.catalog.db/shop.db.init.schema.sql:/docker-entrypoint-initdb.d/1.sql"
      - "./shop.app.catalog.db/shop.db.init.data.sql:/docker-entrypoint-initdb.d/2.sql"  

  shop.app.orders.db:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootPassword
    ports:
      - '27017:27017'
    expose:
      - '27017'
    networks:
      - app-network
    volumes:
      - mongodb-data3:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  shop.app.cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network
    command: redis-server --save 20 1 --loglevel warning --requirepass qwerty123
    volumes: 
      - cache:/data

  shop.app.messagebroker:
    build: ./shop.app.messageBroker
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    ports:
        - 5672
        - 15672
    networks:
        - app-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  shop.app.orders.api:
    build:
      context: ./shop.app.orders.api
    ports:
      - "3001:3001"
    restart: on-failure
    networks:
      - app-network
    depends_on:
      shop.app.catalog.db:
        condition: service_started
      shop.app.cache:
        condition: service_started
      shop.app.orders.db:
        condition: service_started
      shop.app.messagebroker:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_USER: user1
      DB_PASSWORD: qwerty123
      DB_DATABASE: data
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: qwerty123
      MONGODB_URL: mongodb://shop.app.orders.db:27017/items
      MONGO_DB_USERNAME: items_user
      MONGO_DB_PASSWORD: qwerty123
      MESSAGE_BROKER_URL: amqp://admin:pass@shop.app.messagebroker:5672

  shop.app.catalog.api:
    build:
      context: ./shop.app.catalog.api
    ports:
      - "5002:5002"
    restart: on-failure
    networks:
      - app-network
    depends_on:
      shop.app.catalog.db:
        condition: service_started
      shop.app.cache:
        condition: service_started
    environment:
      DB_HOST: shop.app.catalog.db
      DB_USER: catalogReader
      DB_PASSWORD: qwerty123
      DB_DATABASE: Catalog
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: qwerty123


  shop.app.orders.processing:
    build:
      context: ./shop.app.orders.processing
    restart: on-failure
    networks:
      - app-network
    depends_on:
      shop.app.messagebroker:
        condition: service_healthy
    environment:
      MESSAGE_BROKER_URL: amqp://admin:pass@shop.app.messagebroker:5672

  shop.app.web:
    build:
      context: ./shop.app.web
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      REACT_APP_ORDERS_API_URL: http://localhost:3001
      REACT_APP_CATALOG_API_URL: http://localhost:5002
    depends_on:
      - shop.app.orders.api
      - shop.app.catalog.api

volumes:
 cache:
    driver: local
 mongodb-data3:
    driver: local

networks:
  app-network:
    driver: bridge
